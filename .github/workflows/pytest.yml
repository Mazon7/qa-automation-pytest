name: pytest

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 6/12 * * *"

jobs:
  autotests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - uses: actions/cache@v3
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.*') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel --upgrade
          pip install setuptools --upgrade
          pip install requests --upgrade
          pip install frozendict --upgrade
          pip install numba --upgrade
          pip install -r requirements.txt

      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: .github/workflows/vpn.ovpn
      username: ${{ secrets.OVPN_USERNAME }}
      password: ${{ secrets.OVPN_PASSWORD }}
      client_key: ${{ secrets.USER_KEY }}
      auth_key: ${{ secrets.AUTH_KEY }}

      - name: Run Tests
        if: always()
        run: pytest --alluredir=allure-results
        continue-on-error: true

      - name: Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 5

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "adopt"

      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: "telegram.json"
          json: ${{ secrets.NOTIFICATION_JSON }}
          dir: "notifications/"

      - name: Send Telegram Notification
        run: |
          java "-DconfigFile=notifications/telegram.json" -jar allure-notifications-4.2.1.jar
